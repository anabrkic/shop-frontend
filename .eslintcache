[{"/Users/mgobin/Documents/dev/shop-frontend/src/index.js":"1","/Users/mgobin/Documents/dev/shop-frontend/src/App.js":"2","/Users/mgobin/Documents/dev/shop-frontend/src/pages/LoginPage.js":"3","/Users/mgobin/Documents/dev/shop-frontend/src/Navbar.js":"4","/Users/mgobin/Documents/dev/shop-frontend/src/pages/RegisterPage.js":"5","/Users/mgobin/Documents/dev/shop-frontend/src/pages/CartPage.js":"6","/Users/mgobin/Documents/dev/shop-frontend/src/pages/ProductsPage.js":"7","/Users/mgobin/Documents/dev/shop-frontend/src/Footer.js":"8","/Users/mgobin/Documents/dev/shop-frontend/src/pages/SingleProductPage.js":"9","/Users/mgobin/Documents/dev/shop-frontend/src/history.js":"10","/Users/mgobin/Documents/dev/shop-frontend/src/useEffectAsync.js":"11","/Users/mgobin/Documents/dev/shop-frontend/src/pages/OrderPage.js":"12","/Users/mgobin/Documents/dev/shop-frontend/src/pages/AdminPage.js":"13","/Users/mgobin/Documents/dev/shop-frontend/src/axios.js":"14","/Users/mgobin/Documents/dev/shop-frontend/src/pages/HomePage.js":"15","/Users/mgobin/Documents/dev/shop-frontend/src/store/cart-store.js":"16","/Users/mgobin/Documents/dev/shop-frontend/src/store/hydrate.js":"17","/Users/mgobin/Documents/dev/shop-frontend/src/pages/CongratulatePage.js":"18","/Users/mgobin/Documents/dev/shop-frontend/src/pages/AccountPage.js":"19","/Users/mgobin/Documents/dev/shop-frontend/src/pages/OrdersPage.js":"20","/Users/mgobin/Documents/dev/shop-frontend/src/pages/AdminOrdersPage.js":"21"},{"size":197,"mtime":1609372927666,"results":"22","hashOfConfig":"23"},{"size":2105,"mtime":1611512876947,"results":"24","hashOfConfig":"23"},{"size":1665,"mtime":1611512139122,"results":"25","hashOfConfig":"23"},{"size":4829,"mtime":1611513423823,"results":"26","hashOfConfig":"23"},{"size":2427,"mtime":1611512139117,"results":"27","hashOfConfig":"23"},{"size":2681,"mtime":1611508237421,"results":"28","hashOfConfig":"23"},{"size":5718,"mtime":1611513004810,"results":"29","hashOfConfig":"23"},{"size":323,"mtime":1609440776742,"results":"30","hashOfConfig":"23"},{"size":3124,"mtime":1611513203539,"results":"31","hashOfConfig":"23"},{"size":87,"mtime":1609459245125,"results":"32","hashOfConfig":"33"},{"size":207,"mtime":1609510235080,"results":"34","hashOfConfig":"23"},{"size":5799,"mtime":1611510087240,"results":"35","hashOfConfig":"23"},{"size":8305,"mtime":1611510087245,"results":"36","hashOfConfig":"23"},{"size":399,"mtime":1609725417753,"results":"37","hashOfConfig":"23"},{"size":2043,"mtime":1610676826449,"results":"38","hashOfConfig":"23"},{"size":1547,"mtime":1610682782106,"results":"39","hashOfConfig":"23"},{"size":98,"mtime":1610679781596,"results":"40","hashOfConfig":"23"},{"size":637,"mtime":1610682690710,"results":"41","hashOfConfig":"23"},{"size":2184,"mtime":1610684474258,"results":"42","hashOfConfig":"23"},{"size":1893,"mtime":1611509893260,"results":"43","hashOfConfig":"23"},{"size":2515,"mtime":1611511061183,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1rmshhs",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1avnz4v",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"47"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"47"},"/Users/mgobin/Documents/dev/shop-frontend/src/index.js",[],["100","101"],"/Users/mgobin/Documents/dev/shop-frontend/src/App.js",["102"],"import React, {useEffect, useState} from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Redirect } from 'react-router';\n\nimport { LoginPage } from './pages/LoginPage';\nimport { Navbar } from './Navbar';\nimport { RegisterPage } from './pages/RegisterPage';\nimport { CartPage } from './pages/CartPage';\nimport { ProductsPage } from './pages/ProductsPage';\nimport { Footer } from './Footer';\nimport { SingleProductPage } from './pages/SingleProductPage';\nimport { OrderPage } from './pages/OrderPage';\nimport { AdminPage } from './pages/AdminPage';\nimport { HomePage } from './pages/HomePage';\nimport { CongratulatePage } from './pages/CongratulatePage';\nimport { AccountPage } from './pages/AccountPage';\nimport {OrdersPage} from \"./pages/OrdersPage\";\n\nfunction App() {\n  const [role, setRole] = useState(undefined);\n  const [id, setId] = useState(undefined);\n\n  useEffect(() => {\n      const id = localStorage.getItem('userId');\n      const role = localStorage.getItem('role');\n      setRole(role);\n      setId(id);\n  }, []);\n\n  return (\n      <div>\n        <BrowserRouter>\n            <Navbar />\n            <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n                <Route exact path=\"/login\" component={LoginPage} />\n                <Route exact path=\"/register\" component={RegisterPage} />\n                <Route path=\"/products\" component={ProductsPage} />\n                <Route path=\"/cart\" component={CartPage} />\n                <Route path=\"/product/:id\" component={SingleProductPage} />\n                {!id && <Redirect path=\"/login\" />}\n                <Route path=\"/admin\" component={AdminPage} />\n                <Route path=\"/congratulate\" component={CongratulatePage} />\n                <Route path=\"/account/:id\" component={AccountPage} />\n                <Route path=\"/order\" component={OrderPage} />\n                <Route path=\"/orders/:id\" component={OrdersPage} />\n                <Redirect path=\"/login\" />\n            </Switch>\n            <Footer />\n        </BrowserRouter>\n      </div>\n  );\n}\n\nexport default App;\n","/Users/mgobin/Documents/dev/shop-frontend/src/pages/LoginPage.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/Navbar.js",["103","104","105","106","107"],"import React, { useEffect, useState } from 'react';\nimport { css } from '@emotion/css';\nimport { withRouter } from 'react-router';\nimport { isNil } from 'lodash';\n\nimport { ReactComponent as CartIcon } from './assets/cart.svg';\nimport { ReactComponent as PersonIcon } from './assets/person.svg';\nimport { axios } from './axios';\n\nconst navbarStyle = css`\n    border-bottom: 1px solid #f4f4f4;\n    padding: 0 50px;\n`\n\nexport const Navbar = withRouter(props => {\n    const [isAdmin, setIsAdmin] = useState(true);\n    const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n\n    useEffect(() => {\n        if (props?.location?.pathname.includes('/admin')) {\n            setIsAdmin(true);\n        } else {\n            setIsAdmin(false);\n        }\n    }, [props?.location?.pathname]);\n\n    const token = localStorage.getItem('token');\n\n    console.log('props', props);\n\n    return (\n        <div className={navbarStyle}>\n            {isAdmin && (\n                <nav className=\"navbar navbar-light justify-content-start\">\n                    <a className=\"navbar-brand\" style={{ marginRight: 50 }} onClick={() => props.history.push('/admin/products')}>Shop</a>\n                    <div onClick={() => props.history.push('/admin/users')} style={{ marginRight: 30 }}>Korisnici</div>\n                    <div onClick={() => props.history.push('/admin/products')} style={{ marginRight: 30 }}>Proizvodi</div>\n                    <div onClick={() => props.history.push('/admin/orders')}>Narudzbe</div>\n                </nav>\n            )}\n            {!isAdmin && (\n                <nav className=\"navbar navbar-light justify-content-between\">\n                    <a className=\"navbar-brand\" onClick={() => props.history.push('/')}>Shop</a>\n                    <div onClick={() => props.history.push('/products')}>Proizvodi</div>\n                    <div className=\"d-flex flex-row\">\n                        {!isNil(token) &&\n                            <div className=\"d-flex flex-column\" onClick={() => setIsDropdownVisible(!isDropdownVisible)} style={{ marginRight: 20, position: 'relative' }}>\n                                <PersonIcon width=\"25px\" height=\"25px\" />\n                                {isDropdownVisible && <div style={{ position: 'absolute', top: 40, border: '1px solid #f4f4f4', borderRadius: 2, display: 'flex', flexDirection: 'column', zIndex: 100, backgroundColor: 'white' }}>\n                                    <a\n                                        className=\"navbar-brand\"\n                                        onClick={() => {\n                                            const id = localStorage.getItem('userId');\n                                            props.history.push(`/account/${id}`);\n                                        }}\n                                        style={{ fontSize: 14, marginLeft: 10}}\n                                    >Account</a>\n                                    <a\n                                        className=\"navbar-brand\"\n                                        onClick={() => {\n                                            const id = localStorage.getItem('userId');\n                                            props.history.push(`/orders/${id}`);\n                                        }}\n                                        style={{ fontSize: 14, marginLeft: 10 }}\n                                    >Orders</a>\n                                    <a\n                                        className=\"navbar-brand\"\n                                        onClick={() => {\n                                            props.history.push('/login');\n                                            delete axios.defaults.headers['Authorization'];\n                                            localStorage.removeItem('token');\n                                            localStorage.removeItem('userId');\n                                            localStorage.removeItem('role');\n                                        }}\n                                        style={{ fontSize: 14, marginLeft: 10 }}\n                                    >Logout</a>\n                                </div>}\n                            </div>\n                        }\n                        {isNil(token) &&\n                            <div onClick={() => props.history.push('/login')} style={{ marginRight: 10 }}>\n                                Login\n                            </div>\n                        }\n                        {!isNil(token) &&\n                            <div onClick={() => props.history.push('/cart')}>\n                                <CartIcon width=\"25px\" height=\"25px\"/>\n                            </div>\n                        }\n                    </div>\n                </nav>\n            )}\n        </div>\n    );\n});\n","/Users/mgobin/Documents/dev/shop-frontend/src/pages/RegisterPage.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/CartPage.js",["108"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport {useEffectAsync} from \"../useEffectAsync\";\nimport { observer } from \"mobx-react-lite\"\nimport {Cart} from \"../store/cart-store\";\n\nexport const CartPage = observer(({ history }) => {\n    const id = localStorage.getItem('userId');\n    const [cartItems, setCartItems] = useState([]);\n\n    useEffectAsync(async () => {\n        try {\n            const { data } = await axios.get(`http://localhost:4000/cart/${id}`);\n            let cartItems = data[0]?.cartItems;\n            let i = 0;\n            for (const item of cartItems) {\n                const { data } = await axios.get(`http://localhost:4000/products/${item?.productId}`);\n                cartItems[i] = { ...cartItems[i], name: data[0]?.name, price: data[0]?.price };\n                i++;\n            }\n            setCartItems(cartItems);\n        } catch(err) {\n            console.error(err);\n        }\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <div className=\"d-flex justify-content-center\" style={{ padding: '50px 0' }}>Kosarica</div>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">Proizvod</th>\n                    <th scope=\"col\">Cijena</th>\n                    <th scope=\"col\">Kolicina</th>\n                    <th scope=\"col\">Ukupno</th>\n                </tr>\n                </thead>\n                <tbody>\n                {Cart.cartItems.map(item => (\n                    <ItemRow name={item.name} price={item.price} quantity={item.quantity} id={item._id}/>\n                ))}\n                </tbody>\n            </table>\n            <div className=\"d-flex justify-content-end\">\n                <button className=\"btn btn-secondary mx-2\" onClick={() => history.push('/products')}>Nastavi s kupnjom</button>\n                <button className=\"btn btn-primary\" onClick={() => history.push('/order')}>Naplata</button>\n            </div>\n        </div>\n    );\n});\n\nconst ItemRow = observer(({ name, price, quantity, id }) => {\n    return (\n        <tr>\n            <td>{name}</td>\n            <td>{`${price}kn`}</td>\n            <td>\n                <div className=\"d-flex\">\n                    <button className=\"btn btn-secondary\" onClick={() => Cart.decreaseItemCount(id)} style={{ width: 50 }}>-</button>\n                    <input className=\"mx-2\" value={quantity} style={{ width: 100 }}/>\n                    <button className=\"btn btn-primary\" onClick={() => Cart.increaseItemCount(id)} style={{ width: 50 }}>+</button>\n                </div>\n            </td>\n            <td>{`${price*quantity}kn`}</td>\n        </tr>\n    )\n});\n","/Users/mgobin/Documents/dev/shop-frontend/src/pages/ProductsPage.js",["109","110","111"],"import React, { useEffect, useState } from 'react';\nimport useAxios from 'axios-hooks';\nimport axios from 'axios';\nimport { css } from '@emotion/css';\nimport {withRouter} from \"react-router\";\n\nconst categoryNameStyle = css`\n    border-bottom: 1px solid #f4f4f4;\n    padding: 10px 5px;\n`;\n\nexport const ProductsPage = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const [{ data, loading }] = useAxios(\n        'http://localhost:4000/categories'\n    );\n    const [products, setProducts] = useState([]);\n    const [activeCategoryId, setActiveCategoryId] = useState([]);\n\n    useEffect(() => {\n        console.log('useEffect');\n    });\n\n    if (loading) {\n        return null;\n    }\n\n    const handleCategoryClick = async (id) => {\n        try {\n            let response;\n            if (id === 0) {\n                response = await axios.get('http://localhost:4000/products');\n            } else {\n                response = await axios.get(`http://localhost:4000/category-products?categoryId=${id}`);\n            }\n            setProducts(response?.data);\n            setActiveCategoryId(id);\n        } catch(err) {\n            console.error(err);\n        }\n    }\n\n    const handleFilterChange = async (event) => {\n        try {\n            const response = await axios.get(`http://localhost:4000/filtered-products?material=${event.target.value}&categoryId=${activeCategoryId}`);\n            setProducts(response?.data);\n        } catch(err) {\n            console.error(err);\n        }\n    }\n\n    const handleSortChange = async (event) => {\n        if (event?.target?.value === 'priceAsc') {\n            const productsCopy = [...products];\n            productsCopy.sort((a, b) => (a.price - b.price));\n            setProducts(productsCopy);\n        }\n        if (event?.target?.value === 'priceDesc') {\n            const productsCopy = [...products];\n            productsCopy.sort((a, b) => (b.price - a.price));\n            setProducts(productsCopy);\n        }\n    }\n\n    const productsPerPage = 2;\n    const indexOfLast = currentPage * productsPerPage;\n    const indexOfFirst = indexOfLast - productsPerPage;\n    const currentProducts = products.slice(indexOfFirst, indexOfLast);\n\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(products.length / productsPerPage); i++) {\n        pageNumbers.push(i);\n    }\n\n    return (\n        <div className=\"container d-flex\">\n            <div className=\"d-flex flex-column p-3\">\n                <Categories categories={[{ _id: 0, name: 'Sve' }].concat(data)} onCategoryClick={handleCategoryClick}/>\n            </div>\n            <div>\n                <div className=\"p-4\">\n                    <div className=\"d-flex flex-row\">\n                        <select className=\"form-select\" style={{ width: '30%', marginRight: 10 }} onChange={handleFilterChange}>\n                            <option value=\"\" disabled selected hidden>Filter</option>\n                            <option value=\"all\">Sve</option>\n                            <option value=\"gold\">Zlato</option>\n                            <option value=\"silver\">Srebro</option>\n                        </select>\n                        <select className=\"form-select\" style={{ width: '30%' }} onChange={handleSortChange}>\n                            <option value=\"\" disabled selected hidden>Sort</option>\n                            <option value=\"priceAsc\">Cijena, niska prema visokoj</option>\n                            <option value=\"priceDesc\">Cijena, visoka prema niskoj</option>\n                            <option value=\"bestSelling\">Najprodavanije</option>\n                        </select>\n                    </div>\n                </div>\n                {currentProducts?.length === 0 && <div className=\"p-3\">Nema proizvoda</div>}\n                {currentProducts?.length > 0 && (\n                    <div className=\"d-flex flex-wrap p-3\">\n                        {currentProducts.map(product => <Card product={product} />)}\n                    </div>\n                )}\n                <ul className=\"pagination justify-content-center\">\n                    {pageNumbers.map(number => (\n                        <li className={`page-item ${currentPage === number ? 'active' : 'none'}`}><a className=\"page-link\" href=\"#\" onClick={() => setCurrentPage(number)}>{number}</a></li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nconst Categories = ({ categories, onCategoryClick }) => {\n    return (\n        <>\n            {categories.map(category => (\n                <div\n                    className={categoryNameStyle}\n                    onClick={() => onCategoryClick(category._id)}\n                    style={{ cursor: 'pointer' }}\n                >\n                    {category.name}\n                </div>\n            ))}\n        </>\n    )\n}\n\nconst Card = withRouter(({ history, product }) => {\n    return (\n        <div style={{ width: '33%', padding: 10 }}>\n            <div className=\"card\">\n                <img className=\"card-img-top\" src={product?.imageUrl} alt=\"Card image cap\" style={{ height: 300 }} />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{product?.name}</h5>\n                    <p className=\"card-text\">{product?.description}</p>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <div style={{ fontSize: 24, fontWeight: 'bold', color: '#535353' }}>{`${product?.price},00kn`}</div>\n                        <a href=\"#\" className=\"btn btn-primary\" onClick={() => history.push(`/product/${product?._id}`)}>Kupi</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n});\n","/Users/mgobin/Documents/dev/shop-frontend/src/Footer.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/SingleProductPage.js",["112","113"],"import React, {useEffect} from 'react';\nimport useAxios from 'axios-hooks';\nimport axios from \"axios\";\nimport {Cart} from \"../store/cart-store\";\n\nexport const SingleProductPage = ({ match, history }) => {\n    const [{ data, loading }] = useAxios(`http://localhost:4000/products/${match.params.id}`);\n\n    useEffect(() => {\n        const id = localStorage.getItem('userId');\n        console.log('id', id);\n    }, []);\n\n    if (loading) {\n        return null;\n    }\n\n    const product = data[0] || undefined;\n    console.log('PRODUCT', product);\n\n\n    // useEffectAsync(async () => {\n    //     try {\n    //         const productId = match.params.id;\n    //         const product = await axios.get(`http://localhost:4000/products/${productId}`)\n    //     } catch(err) {\n    //         console.error(err);\n    //     }\n    // })\n\n    const handleAddToCart = async () => {\n        const buyer = localStorage.getItem('userId');\n        Cart.addToCart({ ...product, quantity: 1 });\n        try {\n            const response = await axios.post('http://localhost:4000/cart', {\n                buyer,\n                quantity: 1,\n                id: match.params.id,\n            });\n        } catch(err) {\n            console.error(err);\n        }\n        history.push('/cart');\n    }\n\n    const loggedIn = !!localStorage.getItem('userId');\n    console.log('loggedIn', loggedIn);\n\n    return (\n        <div className=\"container\" style={{ paddingTop: 50 }}>\n            <div className=\"d-flex flex-row\">\n                <img\n                    src={product?.imageUrl}\n                    alt=\"Card image cap\"\n                    style={{ width: '50%' }}\n                />\n                <div\n                    className=\"d-flex flex-column p-4 justify-content-between\"\n                    style={{ width: '50%', marginLeft: 50, border: '1px solid #f4f4f4', borderRadius: 2 }}\n                >\n                    <div>\n                        <div className=\"d-flex flex-row justify-content-between p-3\" style={{ borderBottom: '1px solid #f4f4f4' }}>\n                            <div style={{ fontSize: 24 }}>Naziv proizvoda</div>\n                            <div style={{ fontSize: 24, fontWeight: 'bold', height: 'auto' }}>{product?.name}</div>\n                        </div>\n                        <div className=\"d-flex flex-row justify-content-between p-3\" style={{ borderBottom: '1px solid #f4f4f4' }}>\n                            <div style={{ fontSize: 24 }}>Opis proizvoda</div>\n                            <div style={{ fontSize: 24, fontWeight: 'bold', height: 'auto' }}>{product?.description}</div>\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between mt-3\">\n                        <div style={{ fontSize: 24, fontWeight: 'bold', color: '#535353' }}>{`${product?.price},00kn`}</div>\n                        <button className=\"btn btn-primary\" onClick={handleAddToCart} style={{ width: '35%' }} disabled={!loggedIn}>Dodaj u kosaricu</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/mgobin/Documents/dev/shop-frontend/src/history.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/useEffectAsync.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/OrderPage.js",["114"],"import React, {useState} from 'react';\nimport {Cart} from \"../store/cart-store\";\nimport { Form } from 'react-bootstrap';\nimport { observer } from 'mobx-react-lite';\nimport { toJS } from 'mobx';\nimport { axios } from '../axios';\n\nexport const OrderPage = observer((props) => {\n    const [firstName, setFirstName] = useState(undefined);\n    const [lastName, setLastName] = useState(undefined);\n    const [address, setAddress] = useState(undefined);\n    const [postalCode, setPostalCode] = useState(undefined);\n    const [city, setCity] = useState(undefined);\n    const [phoneNumber, setPhoneNumber] = useState(undefined);\n\n    const handleOrder = async () => {\n        const buyer = localStorage.getItem('userId');\n\n        await axios.post('/orders', { firstName, lastName, items: toJS(Cart.cartItems), address, postalCode, city, phoneNumber, totalCost: Cart.totalCost, buyer });\n\n        Cart.emptyCart();\n        props.history.push('/congratulate');\n    }\n\n    return (\n        <div className=\"container d-flex flex-row\">\n            <div className=\"w-50 p-5\">\n                <div className=\"d-flex justify-content-center titleStyle\" style={{ margin: '50px 0' }}>Podaci o kupcu</div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"nameInput\" className=\"form-label\">Ime</label>\n                    <input type=\"email\" className=\"form-control\" id=\"nameInput\" value={firstName} onChange={(event) => setFirstName(event.target.value)} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"surnameInput\" className=\"form-label\">Prezime</label>\n                    <input type=\"text\" className=\"form-control\" id=\"surnameInput\" value={lastName} onChange={(event) => setLastName(event.target.value)} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"addressInput\" className=\"form-label\">Adresa</label>\n                    <input type=\"text\" className=\"form-control\" id=\"addressInput\" value={address} onChange={(event) => setAddress(event.target.value)} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"postalCodeInput\" className=\"form-label\">Postanski broj</label>\n                    <input type=\"text\" className=\"form-control\" id=\"postalCodeInput\" value={postalCode} onChange={(event) => setPostalCode(event.target.value)} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"cityInput\" className=\"form-label\">Grad</label>\n                    <input type=\"text\" className=\"form-control\" id=\"cityInput\" value={city} onChange={(event) => setCity(event.target.value)} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"phoneInput\" className=\"form-label\">Telefon</label>\n                    <input type=\"text\" className=\"form-control\" id=\"phoneInput\" value={phoneNumber} onChange={(event) => setPhoneNumber(event.target.value)} />\n                </div>\n            </div>\n            <div className=\"w-50 p-5\">\n                <div className=\"d-flex justify-content-center titleStyle\" style={{ margin: '50px 0' }}>Podaci za dostavu</div>\n                {Cart.cartItems.map(cartItem => (\n                    <div className=\"d-flex flex-row pb-3\">\n                        <img\n                            src={cartItem?.imageUrl}\n                            alt=\"Card image cap\"\n                            style={{ width: 100, height: 100, borderRadius: 5 }}\n                        />\n                        <div\n                            style={{ marginLeft: 50, width: '100%' }}\n                        >\n                            <div className=\"d-flex flex-row justify-content-between p-2\" style={{ borderBottom: '1px solid #f4f4f4' }}>\n                                <div style={{ fontSize: 16, fontWeight: 'bold', height: 'auto' }}>{cartItem?.name}</div>\n                                <div style={{ fontSize: 16, fontWeight: 'bold', color: '#535353', marginLeft: 100 }}>{`${cartItem?.price},00kn`}</div>\n                            </div>\n                            <div className=\"d-flex flex-row p-2\">\n                                <div style={{ fontSize: 16, fontWeight: 'bold' }}>{`Quantity: ${cartItem?.quantity}`}</div>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n                <div\n                    className=\"d-flex flex-column p-4\"\n                    style={{ border: '1px solid #f4f4f4', borderRadius: 2 }}\n                >\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Placanje pouzecem\" />\n                    </Form.Group>\n                </div>\n                <div className=\"d-flex flex-row justify-content-between mt-1\">\n                    <div style={{ fontSize: 16 }}>Cijena</div>\n                    <div style={{ fontSize: 16, fontWeight: 'bold', color: '#535353' }}>{`${Cart.totalCost},00kn`}</div>\n                </div>\n                <div className=\"d-flex flex-row justify-content-between mt-1\">\n                    <div style={{ fontSize: 16 }}>Postarina</div>\n                    <div style={{ fontSize: 16, fontWeight: 'bold', color: '#535353' }}>Besplatno</div>\n                </div>\n                <div className=\"d-flex flex-row justify-content-between mt-1\">\n                    <div style={{ fontSize: 16 }}>Ukupno</div>\n                    <div style={{ fontSize: 16, fontWeight: 'bold', color: '#535353' }}>{`${Cart.totalCost},00kn`}</div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary w-100 mt-2\" onClick={handleOrder}>Naruci</button>\n            </div>\n        </div>\n    );\n})\n","/Users/mgobin/Documents/dev/shop-frontend/src/pages/AdminPage.js",["115"],"import React, {useState} from 'react';\nimport { Route, Switch, useRouteMatch} from 'react-router-dom';\nimport { useEffectAsync } from \"../useEffectAsync\";\nimport { axios } from \"../axios\";\nimport { css } from '@emotion/css';\nimport { AdminOrdersPage } from \"./AdminOrdersPage\";\n\nexport const AdminPage = () => {\n    return (\n        <div>\n            <Switch>\n                <Route path=\"/admin/users\" component={UsersPage} />\n                <Route exact path=\"/admin/products\" component={ProductsPage} />\n                <Route exact path=\"/admin/products/add\" component={AddProductPage} />\n                <Route exact path=\"/admin/orders\" component={AdminOrdersPage} />\n            </Switch>\n        </div>\n    )\n}\n\nconst UsersPage = () => {\n    const [users, setUsers] = useState([]);\n\n    useEffectAsync(async () => {\n        const response = await axios.get('users');\n        setUsers(response.data);\n    }, []);\n\n    const handleDelete = async (id) => {\n        const response = await axios.delete(`users/${id}`);\n        if (response.data === id) {\n            window.location.reload(false);\n        }\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">First Name</th>\n                    <th scope=\"col\">Last Name</th>\n                    <th scope=\"col\">Delete</th>\n                </tr>\n                </thead>\n                <tbody>\n                {users.map((user, index) => (\n                    <tr>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.email}</td>\n                        <td>{user.firstName}</td>\n                        <td>{user.lastName}</td>\n                        <td>\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleDelete(user.id)}>\n                                X\n                            </button>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nconst ProductsPage = (props) => {\n    const [products, setProducts] = useState([]);\n\n    useEffectAsync(async () => {\n        const response = await axios.get('products');\n        setProducts(response.data);\n    }, []);\n\n    const handleDelete = async (id) => {\n        const response = await axios.delete(`products/${id}`);\n        if (response.data === id) {\n            window.location.reload(false);\n        }\n    }\n\n    const handleAddProduct = async () => {\n        props.history.push('/admin/products/add');\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Material</th>\n                    <th scope=\"col\">Price</th>\n                    <th scope=\"col\">Delete</th>\n                </tr>\n                </thead>\n                <tbody>\n                {products.map((user, index) => (\n                    <tr>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>{user.material}</td>\n                        <td>{`${user.price},00 kn`}</td>\n                        <td>\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleDelete(user._id)}>\n                                X\n                            </button>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={handleAddProduct}>\n                Dodaj proizvod\n            </button>\n        </div>\n    );\n}\n\nconst selectStyle = css`\n    display: block;\n    width: 100%;\n    padding: .375rem .75rem;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #212529;\n    background-color: #fff;\n    background-clip: padding-box;\n    border: 1px solid #ced4da;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    border-radius: .25rem;\n`;\n\nconst AddProductPage = (props) => {\n    const [categories, setCategories] = useState([]);\n    const [name, setName] = useState(undefined);\n    const [price, setPrice] = useState(undefined);\n    const [imageUrl, setImageUrl] = useState(undefined);\n    const [description, setDescription] = useState(undefined);\n    const [material, setMaterial] = useState(undefined);\n    const [categoryId, setCategoryId] = useState(\"\");\n\n    useEffectAsync(async () => {\n        const categoriesResponse = await axios.get('categories');\n        setCategories(categoriesResponse.data);\n    }, []);\n\n    const handleAddProduct = async () => {\n        try {\n            await axios.post('products', { name, price: price?.toString(), imageUrl, material, categoryId, description });\n            props.history.push('/admin/products');\n            window.location.reload(false);\n        } catch(err) {\n            alert('Error while adding a new product');\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"d-flex justify-content-center titleStyle\" style={{ margin: '50px 0' }}>Podaci za dostavu</div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"nameInput\" className=\"form-label\">Ime</label>\n                <input type=\"text\" className=\"form-control\" id=\"nameInput\" value={name} onChange={(event) => setName(event.target.value)} />\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"priceInput\" className=\"form-label\">Cijena</label>\n                <input type=\"number\" className=\"form-control\" id=\"priceInput\" value={price} onChange={(event) => setPrice(event.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"imageUrlInput\" className=\"form-label\">URL Slike</label>\n                <input type=\"text\" className=\"form-control\" id=\"imageUrlInput\" value={imageUrl} onChange={(event) => setImageUrl(event.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"materialInput\" className=\"form-label\">Materijal</label>\n                <input type=\"text\" className=\"form-control\" id=\"materialInput\" value={material} onChange={(event) => setMaterial(event.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"descriptionInput\" className=\"form-label\">Opis</label>\n                <input type=\"text\" className=\"form-control\" id=\"descriptionInput\" value={description} onChange={(event) => setDescription(event.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"category\" className=\"form-label\">Kategorija</label>\n                <select value={categoryId} name=\"cars\" id=\"cars\" className={selectStyle} onChange={(e) => setCategoryId(e.target.value)}>\n                    <option value=\"\" disabled>Odaberi kategoriju</option>\n                    {categories.map(category => (\n                        <option value={category._id}>{category.name}</option>\n                    ))}\n                </select>\n            </div>\n            {/*<Dropdown style={{ marginBottom: 20 }}>*/}\n            {/*    <Dropdown.Toggle id=\"dropdown-basic\" variant=\"secondary\">*/}\n            {/*        Kategorija*/}\n            {/*    </Dropdown.Toggle>*/}\n            {/*    <Dropdown.Menu>*/}\n            {/*        {categories.map(category => (*/}\n            {/*            <Dropdown.Item onClick={() => setActiveCategory(category.name)}>{category.name}</Dropdown.Item>*/}\n            {/*        ))}*/}\n            {/*    </Dropdown.Menu>*/}\n            {/*</Dropdown>*/}\n            {/*<div className=\"mb-3\">*/}\n            {/*    <input type=\"text\" className=\"form-control\" id=\"phoneInput\" value={activeCategory} />*/}\n            {/*</div>*/}\n            <button type=\"submit\" className=\"btn btn-primary\" style={{ marginTop: 10 }} onClick={handleAddProduct}>Dodaj proizvod</button>\n        </div>\n    )\n}\n","/Users/mgobin/Documents/dev/shop-frontend/src/axios.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/HomePage.js",["116","117"],"import React from 'react';\nimport { Carousel } from 'react-bootstrap';\n\nexport const HomePage = (props) => {\n    return (\n        <Carousel prevIcon={null} prevLabel={null} nextIcon={null} nextLabel={null}>\n            <Carousel.Item>\n                <img\n                    onClick={() => props.history.push('/products')}\n                    className=\"d-block w-100\"\n                    src=\"https://img-diva.vecernji.hr/uwRxvbuq7Z1DALO7BjYWKpSpcQA=/785x0/smart/media/images/2019-47/lykke-timeless-rose-nausnice.jpg\"\n                />\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    onClick={() => props.history.push('/products')}\n                    className=\"d-block w-100\"\n                    src=\"https://img-diva.vecernji.hr/qMXGpDUpEFpbcKD4lpg2tfLwRy0=/1280x857/smart/media/images/2019-47/lykke-bridal-kolekcija_02.jpg\"\n                />\n            </Carousel.Item>\n        </Carousel>\n        // <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-ride=\"carousel\">\n        //     <ol className=\"carousel-indicators\">\n        //         <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" className=\"active\"></li>\n        //         <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\n        //         <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\n        //     </ol>\n        //     <div className=\"carousel-inner\">\n        //         <div className=\"carousel-item active\">\n        //             <img className=\"d-block w-100 h-50\" src=\"https://img-diva.vecernji.hr/uwRxvbuq7Z1DALO7BjYWKpSpcQA=/785x0/smart/media/images/2019-47/lykke-timeless-rose-nausnice.jpg\" />\n        //         </div>\n        //         <div className=\"carousel-item h-50\">\n        //             <img className=\"d-block w-100\" src=\"https://img-diva.vecernji.hr/qMXGpDUpEFpbcKD4lpg2tfLwRy0=/1280x857/smart/media/images/2019-47/lykke-bridal-kolekcija_02.jpg\" />\n        //         </div>\n        //     </div>\n        // </div>\n    );\n}\n","/Users/mgobin/Documents/dev/shop-frontend/src/store/cart-store.js",["118"],"import React from \"react\"\nimport {computed, makeAutoObservable} from 'mobx'\nimport { forEach, remove, find } from 'lodash';\nimport { persist } from 'mobx-persist';\n\nimport { hydrate } from './hydrate';\n\nclass _Cart {\n    @persist('list')\n    cartItems = [];\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    addToCart(product) {\n        if (!find(this.cartItems, cartItem => cartItem._id === product._id)) {\n            this.cartItems.push(product);\n        } else {\n            this.increaseItemCount(product._id);\n        }\n    }\n\n    increaseItemCount(id) {\n        forEach(this.cartItems, (item, index) => {\n            if (item._id === id) {\n                this.cartItems[index] = { ...item, quantity: this.cartItems[index].quantity + 1 };\n            }\n        })\n    }\n\n    decreaseItemCount(id) {\n        forEach(this.cartItems, (item, index) => {\n            if (item._id === id) {\n                this.cartItems[index] = { ...item, quantity: this.cartItems[index].quantity - 1 };\n                if (this.cartItems[index].quantity === 0) {\n                    remove(this.cartItems, cartItem => cartItem._id === id);\n                }\n            }\n        })\n    }\n\n    emptyCart() {\n        this.cartItems = [];\n    }\n\n    @computed\n    get totalCost() {\n        let cost = 0;\n        for (let cartItem of this.cartItems) {\n            cost += cartItem.quantity * cartItem.price;\n        }\n        return cost;\n    }\n}\n\nexport const Cart = new _Cart();\n\nhydrate('cart', Cart).then(() => console.log('cart hydrated!'));\n","/Users/mgobin/Documents/dev/shop-frontend/src/store/hydrate.js",[],["119","120"],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/CongratulatePage.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/AccountPage.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/OrdersPage.js",["121"],"import React, {useState} from 'react';\nimport {useEffectAsync} from \"../useEffectAsync\";\nimport { axios } from '../axios';\nimport {Cart} from \"../store/cart-store\";\nimport {observer} from \"mobx-react-lite\";\n\nexport const OrdersPage = ({ match }) => {\n    const [ordersData, setOrdersData] = useState([]);\n\n    useEffectAsync(async () => {\n        try {\n            const { data } = await axios.get(`http://localhost:4000/buyer-orders?buyerId=${match.params.id}`);\n            setOrdersData(data);\n        } catch(err) {\n            console.error(err);\n        }\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <div className=\"d-flex justify-content-center\" style={{ padding: '50px 0' }}>Narudzbe</div>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Broj narudzbe</th>\n                    <th scope=\"col\">Datum</th>\n                    <th scope=\"col\">Lokacija dostave</th>\n                    <th scope=\"col\">Cijena</th>\n                </tr>\n                </thead>\n                <tbody>\n                {ordersData.map(item => (\n                    <ItemRow\n                        status={item?.status}\n                        orderCode={item?.orderCode}\n                        date={item?.date}\n                        shipTo={`${item?.address}, ${item?.postalCode} ${item?.city}`}\n                        totalCost={item?.totalCost}\n                    />\n                ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nconst ItemRow = observer(({ status, orderCode, date, shipTo, totalCost }) => {\n    return (\n        <tr>\n            <td>{status}</td>\n            <td>{orderCode}</td>\n            <td>{date}</td>\n            <td>{shipTo}</td>\n            <td>{`${totalCost}kn`}</td>\n        </tr>\n    )\n});\n\n","/Users/mgobin/Documents/dev/shop-frontend/src/pages/AdminOrdersPage.js",["122"],"import React, {useState} from \"react\";\nimport {useEffectAsync} from \"../useEffectAsync\";\nimport {axios} from \"../axios\";\nimport {css} from \"@emotion/css\";\n\nconst selectStyle = css`\n    display: block;\n    width: 100%;\n    padding: .375rem .75rem;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #212529;\n    background-color: #fff;\n    background-clip: padding-box;\n    border: 1px solid #ced4da;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    border-radius: .25rem;\n`;\n\nexport const AdminOrdersPage = (props) => {\n    const [ordersData, setOrdersData] = useState([]);\n\n    useEffectAsync(async () => {\n        try {\n            const { data } = await axios.get(`http://localhost:4000/orders`);\n            setOrdersData(data);\n        } catch(err) {\n            console.error(err);\n        }\n    }, []);\n\n    const handleOrderDelete = async (id) => {\n        const response = await axios.delete(`http://localhost:4000/orders/${id}`);\n        if (response.data === id) {\n            window.location.reload(false);\n        }\n    }\n\n    console.log('ordersData ', ordersData);\n\n    return (\n        <div className=\"container mt-5\">\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Broj narudzbe</th>\n                    <th scope=\"col\">Datum</th>\n                    <th scope=\"col\">Lokacija dostave</th>\n                    <th scope=\"col\">Cijena</th>\n                    <th scope=\"col\">Delete</th>\n                </tr>\n                </thead>\n                <tbody>\n                {ordersData.map((order, index) => (\n                    <tr key={order?._id}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{order?.status}</td>\n                        <td>{order?.orderCode}</td>\n                        <td>{order?.date}</td>\n                        <td>{`${order?.address}, ${order?.postalCode} ${order?.city}`}</td>\n                        <td>{`${order?.totalCost}`}</td>\n                        <td>\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleOrderDelete(order?._id)}>\n                                X\n                            </button>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":20,"column":10,"nodeType":"129","messageId":"130","endLine":20,"endColumn":14},{"ruleId":"131","severity":1,"message":"132","line":35,"column":21,"nodeType":"133","endLine":35,"endColumn":131},{"ruleId":"131","severity":1,"message":"132","line":43,"column":21,"nodeType":"133","endLine":43,"endColumn":89},{"ruleId":"131","severity":1,"message":"132","line":50,"column":37,"nodeType":"133","endLine":57,"endColumn":38},{"ruleId":"131","severity":1,"message":"132","line":58,"column":37,"nodeType":"133","endLine":65,"endColumn":38},{"ruleId":"131","severity":1,"message":"132","line":66,"column":37,"nodeType":"133","endLine":76,"endColumn":38},{"ruleId":"127","severity":1,"message":"134","line":9,"column":12,"nodeType":"129","messageId":"130","endLine":9,"endColumn":21},{"ruleId":"131","severity":1,"message":"135","line":106,"column":99,"nodeType":"133","endLine":106,"endColumn":172},{"ruleId":"136","severity":1,"message":"137","line":134,"column":17,"nodeType":"133","endLine":134,"endColumn":118},{"ruleId":"131","severity":1,"message":"135","line":140,"column":25,"nodeType":"133","endLine":140,"endColumn":122},{"ruleId":"127","severity":1,"message":"138","line":35,"column":19,"nodeType":"129","messageId":"130","endLine":35,"endColumn":27},{"ruleId":"136","severity":1,"message":"137","line":52,"column":17,"nodeType":"133","endLine":56,"endColumn":19},{"ruleId":"136","severity":1,"message":"137","line":58,"column":25,"nodeType":"133","endLine":62,"endColumn":27},{"ruleId":"127","severity":1,"message":"139","line":2,"column":25,"nodeType":"129","messageId":"130","endLine":2,"endColumn":38},{"ruleId":"140","severity":1,"message":"141","line":8,"column":17,"nodeType":"133","endLine":12,"endColumn":19},{"ruleId":"140","severity":1,"message":"141","line":15,"column":17,"nodeType":"133","endLine":19,"endColumn":19},{"ruleId":"127","severity":1,"message":"142","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":13},{"ruleId":"123","replacedBy":"143"},{"ruleId":"125","replacedBy":"144"},{"ruleId":"127","severity":1,"message":"145","line":4,"column":9,"nodeType":"129","messageId":"130","endLine":4,"endColumn":13},{"ruleId":"127","severity":1,"message":"146","line":6,"column":7,"nodeType":"129","messageId":"130","endLine":6,"endColumn":18},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'role' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'cartItems' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'response' is assigned a value but never used.","'useRouteMatch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'React' is defined but never used.",["147"],["148"],"'Cart' is defined but never used.","'selectStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]