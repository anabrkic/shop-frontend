[{"/Users/mgobin/Documents/dev/shop-frontend/src/index.js":"1","/Users/mgobin/Documents/dev/shop-frontend/src/App.js":"2","/Users/mgobin/Documents/dev/shop-frontend/src/pages/LoginPage.js":"3","/Users/mgobin/Documents/dev/shop-frontend/src/Navbar.js":"4","/Users/mgobin/Documents/dev/shop-frontend/src/pages/RegisterPage.js":"5","/Users/mgobin/Documents/dev/shop-frontend/src/pages/CartPage.js":"6","/Users/mgobin/Documents/dev/shop-frontend/src/pages/ProductsPage.js":"7","/Users/mgobin/Documents/dev/shop-frontend/src/Footer.js":"8","/Users/mgobin/Documents/dev/shop-frontend/src/pages/SingleProductPage.js":"9","/Users/mgobin/Documents/dev/shop-frontend/src/history.js":"10","/Users/mgobin/Documents/dev/shop-frontend/src/useEffectAsync.js":"11","/Users/mgobin/Documents/dev/shop-frontend/src/pages/OrderPage.js":"12","/Users/mgobin/Documents/dev/shop-frontend/src/pages/AdminPage.js":"13","/Users/mgobin/Documents/dev/shop-frontend/src/axios.js":"14","/Users/mgobin/Documents/dev/shop-frontend/src/pages/HomePage.js":"15","/Users/mgobin/Documents/dev/shop-frontend/src/store/cart-store.js":"16"},{"size":197,"mtime":1609372927666,"results":"17","hashOfConfig":"18"},{"size":1399,"mtime":1610677067011,"results":"19","hashOfConfig":"18"},{"size":1526,"mtime":1609725464958,"results":"20","hashOfConfig":"18"},{"size":3127,"mtime":1610677167539,"results":"21","hashOfConfig":"18"},{"size":2223,"mtime":1609458684771,"results":"22","hashOfConfig":"18"},{"size":3034,"mtime":1610679210929,"results":"23","hashOfConfig":"18"},{"size":5718,"mtime":1609546119953,"results":"24","hashOfConfig":"18"},{"size":323,"mtime":1609440776742,"results":"25","hashOfConfig":"18"},{"size":2971,"mtime":1610678265210,"results":"26","hashOfConfig":"18"},{"size":87,"mtime":1609459245125,"results":"27","hashOfConfig":"18"},{"size":207,"mtime":1609510235080,"results":"28","hashOfConfig":"18"},{"size":1645,"mtime":1609790585923,"results":"29","hashOfConfig":"18"},{"size":8247,"mtime":1609729495038,"results":"30","hashOfConfig":"18"},{"size":399,"mtime":1609725417753,"results":"31","hashOfConfig":"18"},{"size":2043,"mtime":1610676826449,"results":"32","hashOfConfig":"18"},{"size":1121,"mtime":1610679781591,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1avnz4v",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mgobin/Documents/dev/shop-frontend/src/index.js",[],["70","71"],"/Users/mgobin/Documents/dev/shop-frontend/src/App.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/LoginPage.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/Navbar.js",["72","73","74"],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/RegisterPage.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/CartPage.js",["75"],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/ProductsPage.js",["76","77","78"],"import React, { useEffect, useState } from 'react';\nimport useAxios from 'axios-hooks';\nimport axios from 'axios';\nimport { css } from '@emotion/css';\nimport {withRouter} from \"react-router\";\n\nconst categoryNameStyle = css`\n    border-bottom: 1px solid #f4f4f4;\n    padding: 10px 5px;\n`;\n\nexport const ProductsPage = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const [{ data, loading }] = useAxios(\n        'http://localhost:4000/categories'\n    );\n    const [products, setProducts] = useState([]);\n    const [activeCategoryId, setActiveCategoryId] = useState([]);\n\n    useEffect(() => {\n        console.log('useEffect');\n    });\n\n    if (loading) {\n        return null;\n    }\n\n    const handleCategoryClick = async (id) => {\n        try {\n            let response;\n            if (id === 0) {\n                response = await axios.get('http://localhost:4000/products');\n            } else {\n                response = await axios.get(`http://localhost:4000/category-products?categoryId=${id}`);\n            }\n            setProducts(response?.data);\n            setActiveCategoryId(id);\n        } catch(err) {\n            console.error(err);\n        }\n    }\n\n    const handleFilterChange = async (event) => {\n        try {\n            const response = await axios.get(`http://localhost:4000/filtered-products?material=${event.target.value}&categoryId=${activeCategoryId}`);\n            setProducts(response?.data);\n        } catch(err) {\n            console.error(err);\n        }\n    }\n\n    const handleSortChange = async (event) => {\n        if (event?.target?.value === 'priceAsc') {\n            const productsCopy = [...products];\n            productsCopy.sort((a, b) => (a.price - b.price));\n            setProducts(productsCopy);\n        }\n        if (event?.target?.value === 'priceDesc') {\n            const productsCopy = [...products];\n            productsCopy.sort((a, b) => (b.price - a.price));\n            setProducts(productsCopy);\n        }\n    }\n\n    const productsPerPage = 2;\n    const indexOfLast = currentPage * productsPerPage;\n    const indexOfFirst = indexOfLast - productsPerPage;\n    const currentProducts = products.slice(indexOfFirst, indexOfLast);\n\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(products.length / productsPerPage); i++) {\n        pageNumbers.push(i);\n    }\n\n    return (\n        <div className=\"container d-flex\">\n            <div className=\"d-flex flex-column p-3\">\n                <Categories categories={[{ _id: 0, name: 'Sve' }].concat(data)} onCategoryClick={handleCategoryClick}/>\n            </div>\n            <div>\n                <div className=\"p-4\">\n                    <div className=\"d-flex flex-row\">\n                        <select className=\"form-select\" style={{ width: '30%', marginRight: 10 }} onChange={handleFilterChange}>\n                            <option value=\"\" disabled selected hidden>Filter</option>\n                            <option value=\"all\">Sve</option>\n                            <option value=\"gold\">Zlato</option>\n                            <option value=\"silver\">Srebro</option>\n                        </select>\n                        <select className=\"form-select\" style={{ width: '30%' }} onChange={handleSortChange}>\n                            <option value=\"\" disabled selected hidden>Sort</option>\n                            <option value=\"priceAsc\">Cijena, niska prema visokoj</option>\n                            <option value=\"priceDesc\">Cijena, visoka prema niskoj</option>\n                            <option value=\"bestSelling\">Najprodavanije</option>\n                        </select>\n                    </div>\n                </div>\n                {currentProducts?.length === 0 && <div className=\"p-3\">Nema proizvoda</div>}\n                {currentProducts?.length > 0 && (\n                    <div className=\"d-flex flex-wrap p-3\">\n                        {currentProducts.map(product => <Card product={product} />)}\n                    </div>\n                )}\n                <ul className=\"pagination justify-content-center\">\n                    {pageNumbers.map(number => (\n                        <li className={`page-item ${currentPage === number ? 'active' : 'none'}`}><a className=\"page-link\" href=\"#\" onClick={() => setCurrentPage(number)}>{number}</a></li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nconst Categories = ({ categories, onCategoryClick }) => {\n    return (\n        <>\n            {categories.map(category => (\n                <div\n                    className={categoryNameStyle}\n                    onClick={() => onCategoryClick(category._id)}\n                    style={{ cursor: 'pointer' }}\n                >\n                    {category.name}\n                </div>\n            ))}\n        </>\n    )\n}\n\nconst Card = withRouter(({ history, product }) => {\n    return (\n        <div style={{ width: '33%', padding: 10 }}>\n            <div className=\"card\">\n                <img className=\"card-img-top\" src={product?.imageUrl} alt=\"Card image cap\" style={{ height: 300 }} />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{product?.name}</h5>\n                    <p className=\"card-text\">{product?.description}</p>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <div style={{ fontSize: 24, fontWeight: 'bold', color: '#535353' }}>{`${product?.price},00kn`}</div>\n                        <a href=\"#\" className=\"btn btn-primary\" onClick={() => history.push(`/product/${product?._id}`)}>Kupi</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n});\n","/Users/mgobin/Documents/dev/shop-frontend/src/Footer.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/SingleProductPage.js",["79","80","81"],"import React, {useEffect} from 'react';\nimport useAxios from 'axios-hooks';\nimport axios from \"axios\";\nimport {Cart} from \"../store/cart-store\";\n\nexport const SingleProductPage = ({ match, history }) => {\n    const [{ data, loading }] = useAxios(`http://localhost:4000/products/${match.params.id}`);\n\n    useEffect(() => {\n        const id = localStorage.getItem('userId');\n        console.log('id', id);\n    }, []);\n\n    if (loading) {\n        return null;\n    }\n\n    const product = data[0] || undefined;\n    console.log('PRODUCT', product);\n\n\n    // useEffectAsync(async () => {\n    //     try {\n    //         const productId = match.params.id;\n    //         const product = await axios.get(`http://localhost:4000/products/${productId}`)\n    //     } catch(err) {\n    //         console.error(err);\n    //     }\n    // })\n\n    const handleAddToCart = async () => {\n        const buyer = localStorage.getItem('userId');\n        Cart.addToCart(product);\n        try {\n            const response = await axios.post('http://localhost:4000/cart', {\n                buyer,\n                quantity: 1,\n                id: match.params.id,\n            });\n        } catch(err) {\n            console.error(err);\n        }\n    }\n\n    return (\n        <div className=\"container\" style={{ paddingTop: 50 }}>\n            <div className=\"d-flex flex-row\">\n                <img\n                    src={product?.imageUrl}\n                    alt=\"Card image cap\"\n                    style={{ width: '50%' }}\n                />\n                <div\n                    className=\"d-flex flex-column p-4 justify-content-between\"\n                    style={{ width: '50%', marginLeft: 50, border: '1px solid #f4f4f4', borderRadius: 2 }}\n                >\n                    <div>\n                        <div className=\"d-flex flex-row justify-content-between p-3\" style={{ borderBottom: '1px solid #f4f4f4' }}>\n                            <div style={{ fontSize: 24 }}>Naziv proizvoda</div>\n                            <div style={{ fontSize: 24, fontWeight: 'bold', height: 'auto' }}>{product?.name}</div>\n                        </div>\n                        <div className=\"d-flex flex-row justify-content-between p-3\" style={{ borderBottom: '1px solid #f4f4f4' }}>\n                            <div style={{ fontSize: 24 }}>Opis proizvoda</div>\n                            <div style={{ fontSize: 24, fontWeight: 'bold', height: 'auto' }}>{product?.description}</div>\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <div style={{ fontSize: 24, fontWeight: 'bold', color: '#535353' }}>{`${product?.price},00kn`}</div>\n                        <a href=\"#\" className=\"btn btn-primary\" onClick={handleAddToCart} style={{ width: '35%' }}>Dodaj u kosaricu</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/mgobin/Documents/dev/shop-frontend/src/history.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/useEffectAsync.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/OrderPage.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/AdminPage.js",["82","83","84"],"import React, {useState} from 'react';\nimport { Route, Switch, useRouteMatch} from 'react-router-dom';\nimport useAxios from \"axios-hooks\";\nimport {useEffectAsync} from \"../useEffectAsync\";\nimport { axios } from \"../axios\";\nimport { Dropdown } from \"react-bootstrap\";\nimport {css} from \"@emotion/css\";\n\nexport const AdminPage = () => {\n    return (\n        <div>\n            <Switch>\n                <Route path=\"/admin/users\" component={UsersPage} />\n                <Route exact path=\"/admin/products\" component={ProductsPage} />\n                <Route exact path=\"/admin/products/add\" component={AddProductPage} />\n            </Switch>\n        </div>\n    )\n}\n\nconst UsersPage = () => {\n    const [users, setUsers] = useState([]);\n\n    useEffectAsync(async () => {\n        const response = await axios.get('users');\n        setUsers(response.data);\n    }, []);\n\n    const handleDelete = async (id) => {\n        const response = await axios.delete(`users/${id}`);\n        if (response.data === id) {\n            window.location.reload(false);\n        }\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">First Name</th>\n                    <th scope=\"col\">Last Name</th>\n                    <th scope=\"col\">Delete</th>\n                </tr>\n                </thead>\n                <tbody>\n                {users.map((user, index) => (\n                    <tr>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.email}</td>\n                        <td>{user.firstName}</td>\n                        <td>{user.lastName}</td>\n                        <td>\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleDelete(user.id)}>\n                                X\n                            </button>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nconst ProductsPage = (props) => {\n    const [products, setProducts] = useState([]);\n\n    useEffectAsync(async () => {\n        const response = await axios.get('products');\n        setProducts(response.data);\n    }, []);\n\n    const handleDelete = async (id) => {\n        const response = await axios.delete(`products/${id}`);\n        if (response.data === id) {\n            window.location.reload(false);\n        }\n    }\n\n    const handleAddProduct = async () => {\n        props.history.push('/admin/products/add');\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Material</th>\n                    <th scope=\"col\">Price</th>\n                    <th scope=\"col\">Delete</th>\n                </tr>\n                </thead>\n                <tbody>\n                {products.map((user, index) => (\n                    <tr>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>{user.material}</td>\n                        <td>{`${user.price},00 kn`}</td>\n                        <td>\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleDelete(user._id)}>\n                                X\n                            </button>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={handleAddProduct}>\n                Dodaj proizvod\n            </button>\n        </div>\n    );\n}\n\nconst selectStyle = css`\n    display: block;\n    width: 100%;\n    padding: .375rem .75rem;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #212529;\n    background-color: #fff;\n    background-clip: padding-box;\n    border: 1px solid #ced4da;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    border-radius: .25rem;\n`;\n\nconst AddProductPage = (props) => {\n    const [categories, setCategories] = useState([]);\n    const [name, setName] = useState(undefined);\n    const [price, setPrice] = useState(undefined);\n    const [imageUrl, setImageUrl] = useState(undefined);\n    const [description, setDescription] = useState(undefined);\n    const [material, setMaterial] = useState(undefined);\n    const [categoryId, setCategoryId] = useState(\"\");\n\n    useEffectAsync(async () => {\n        const categoriesResponse = await axios.get('categories');\n        setCategories(categoriesResponse.data);\n    }, []);\n\n    const handleAddProduct = async () => {\n        try {\n            await axios.post('products', { name, price: price?.toString(), imageUrl, material, categoryId, description });\n            props.history.push('/admin/products');\n            window.location.reload(false);\n        } catch(err) {\n            alert('Error while adding a new product');\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"d-flex justify-content-center titleStyle\" style={{ margin: '50px 0' }}>Podaci za dostavu</div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"nameInput\" className=\"form-label\">Ime</label>\n                <input type=\"text\" className=\"form-control\" id=\"nameInput\" value={name} onChange={(event) => setName(event.target.value)} />\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"priceInput\" className=\"form-label\">Cijena</label>\n                <input type=\"number\" className=\"form-control\" id=\"priceInput\" value={price} onChange={(event) => setPrice(event.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"imageUrlInput\" className=\"form-label\">URL Slike</label>\n                <input type=\"text\" className=\"form-control\" id=\"imageUrlInput\" value={imageUrl} onChange={(event) => setImageUrl(event.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"materialInput\" className=\"form-label\">Materijal</label>\n                <input type=\"text\" className=\"form-control\" id=\"materialInput\" value={material} onChange={(event) => setMaterial(event.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"descriptionInput\" className=\"form-label\">Opis</label>\n                <input type=\"text\" className=\"form-control\" id=\"descriptionInput\" value={description} onChange={(event) => setDescription(event.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"category\" className=\"form-label\">Kategorija</label>\n                <select value={categoryId} name=\"cars\" id=\"cars\" className={selectStyle} onChange={(e) => setCategoryId(e.target.value)}>\n                    <option value=\"\" disabled>Odaberi kategoriju</option>\n                    {categories.map(category => (\n                        <option value={category._id}>{category.name}</option>\n                    ))}\n                </select>\n            </div>\n            {/*<Dropdown style={{ marginBottom: 20 }}>*/}\n            {/*    <Dropdown.Toggle id=\"dropdown-basic\" variant=\"secondary\">*/}\n            {/*        Kategorija*/}\n            {/*    </Dropdown.Toggle>*/}\n            {/*    <Dropdown.Menu>*/}\n            {/*        {categories.map(category => (*/}\n            {/*            <Dropdown.Item onClick={() => setActiveCategory(category.name)}>{category.name}</Dropdown.Item>*/}\n            {/*        ))}*/}\n            {/*    </Dropdown.Menu>*/}\n            {/*</Dropdown>*/}\n            {/*<div className=\"mb-3\">*/}\n            {/*    <input type=\"text\" className=\"form-control\" id=\"phoneInput\" value={activeCategory} />*/}\n            {/*</div>*/}\n            <button type=\"submit\" className=\"btn btn-primary\" style={{ marginTop: 10 }} onClick={handleAddProduct}>Dodaj proizvod</button>\n        </div>\n    )\n}\n","/Users/mgobin/Documents/dev/shop-frontend/src/axios.js",[],"/Users/mgobin/Documents/dev/shop-frontend/src/pages/HomePage.js",["85","86"],"/Users/mgobin/Documents/dev/shop-frontend/src/store/cart-store.js",["87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":35,"column":21,"nodeType":"94","endLine":35,"endColumn":131},{"ruleId":"92","severity":1,"message":"93","line":42,"column":21,"nodeType":"94","endLine":42,"endColumn":89},{"ruleId":"92","severity":1,"message":"93","line":49,"column":37,"nodeType":"94","endLine":57,"endColumn":38},{"ruleId":"95","severity":1,"message":"96","line":9,"column":12,"nodeType":"97","messageId":"98","endLine":9,"endColumn":21},{"ruleId":"92","severity":1,"message":"99","line":106,"column":99,"nodeType":"94","endLine":106,"endColumn":172},{"ruleId":"100","severity":1,"message":"101","line":134,"column":17,"nodeType":"94","endLine":134,"endColumn":118},{"ruleId":"92","severity":1,"message":"99","line":140,"column":25,"nodeType":"94","endLine":140,"endColumn":122},{"ruleId":"95","severity":1,"message":"102","line":35,"column":19,"nodeType":"97","messageId":"98","endLine":35,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":48,"column":17,"nodeType":"94","endLine":52,"endColumn":19},{"ruleId":"92","severity":1,"message":"99","line":69,"column":25,"nodeType":"94","endLine":69,"endColumn":116},{"ruleId":"95","severity":1,"message":"103","line":2,"column":25,"nodeType":"97","messageId":"98","endLine":2,"endColumn":38},{"ruleId":"95","severity":1,"message":"104","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":16},{"ruleId":"95","severity":1,"message":"105","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":8,"column":17,"nodeType":"94","endLine":12,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":15,"column":17,"nodeType":"94","endLine":19,"endColumn":19},{"ruleId":"95","severity":1,"message":"108","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":13},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'cartItems' is assigned a value but never used.","Identifier","unusedVar","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'response' is assigned a value but never used.","'useRouteMatch' is defined but never used.","'useAxios' is defined but never used.","'Dropdown' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]